<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<!-- shutdownHook="disable"-->
<configuration status="info"  >
    <properties>
        <Property name="LOG_PATTERN">%highlight{%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5p] [%t] %-50.50c{1.} : %notEmpty{[%marker]} %m%n%ex}</Property>

    </properties>
    <!--先定义所有的appender-->
    <appenders>
        <!--这个输出控制台的配置-->
        <console name="Console" target="SYSTEM_OUT">
            <!--输出日志的格式-->
            <PatternLayout pattern="${LOG_PATTERN}"/>
        </console>

        <!-- 这个会打印出所有的debug及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="RollingFileDebug" fileName="./logs/debug.log"
                     filePattern="./logs/gz/${date:yyyy-MM}/debug-%d{yyyy-MM-dd}-%i.gz">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->

            <Filters>
                <MarkerFilter marker="lose" onMatch="DENY" onMismatch="NEUTRAL"  />
                <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="100 MB"/>
            </Policies>
        </RollingFile>


        <RollingFile name="RollingFileError" fileName="./logs/error.log"
                     filePattern="./logs/gz/${date:yyyy-MM}/error-%d{yyyy-MM-dd}-%i.gz">


            <Filters>
                <MarkerFilter marker="lose" onMatch="DENY" onMismatch="NEUTRAL"  />
                <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>

            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="100 MB"/>
            </Policies>
        </RollingFile>

        <RollingFile name="RollingFileLose" fileName="./logs/lose.log"

                     filePattern="./logs/gz/${date:yyyy-MM}/lose-%d{yyyy-MM-dd}-%i.gz">
            <Filters>
                <MarkerFilter marker="lose" onMatch="ACCEPT" onMismatch="DENY"  />
            </Filters>

            <PatternLayout pattern="%msg%n" />
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="100 MB"/>
            </Policies>
        </RollingFile>


    </appenders>
    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>
        <!--过滤掉spring和mybatis的一些无用的信息-->
        <logger name="org.springframework" level="WARN"  />
        <logger name="org.mybatis" level="WARN" />


        <!--我们自己程序的包名。打印debug信息
        additivity="false"表只要是com.syyx.tpf.advertising包的消息在这个配置里的appender输出，不再传递到父包配置（这里是root）的appender中-->
        <logger name="org.example.zhc" level="info"  additivity="false" >
            <appender-ref ref="Console"/>
            <appender-ref ref="RollingFileLose"/>
            <appender-ref ref="RollingFileDebug"/>
            <appender-ref ref="RollingFileError"/>

        </logger>

        <!--   所有包，只输出异常信息    -->
        <root level="WARN">
            <appender-ref ref="Console"/>
            <appender-ref ref="RollingFileDebug"/>
              <appender-ref ref="RollingFileError"/>
        </root>
    </loggers>
</configuration>