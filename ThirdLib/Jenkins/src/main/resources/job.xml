<project>
    <actions/>
    <description>remote deploy</description>
    <keepDependencies>false</keepDependencies>
    <properties>
        <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.1.1"/>
        <com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty plugin="gitlab-plugin@1.5.13">
            <gitLabConnection>gitlab-tpf</gitLabConnection>
        </com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty>
        <hudson.model.ParametersDefinitionProperty>
            <parameterDefinitions>
                <hudson.model.StringParameterDefinition>
                    <name>paramaStr</name>
                    <description>字符串化参数</description>
                    <defaultValue/>
                    <trim>false</trim>
                </hudson.model.StringParameterDefinition>
            </parameterDefinitions>
        </hudson.model.ParametersDefinitionProperty>
    </properties>
    <scm class="hudson.scm.NullSCM"/>
    <canRoam>true</canRoam>
    <disabled>false</disabled>
    <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
    <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
    <triggers/>
    <concurrentBuild>false</concurrentBuild>
    <builders>
        <hudson.tasks.Shell>
            <command>#!/bin/bash # format: isGrayTest,git(addr#branch#tag),apollo(secret#meta#env#idc),serive(serive#service); #false,http://192.168.10.51/shitou/tpf-game-server#dev#tgs-1.0.1.78-nihong,emptySecret#http://192.168.10.142:28080#PRO#wuhui-dev-aisen,tpf-game-login#tpf-game-proxy; echo "paramas: $paramaStr" IFS=';' read -r -a projectArr <<< "$paramaStr" for p in "${projectArr[@]}" do echo "deploying project: $p" IFS=',' read -r -a paramasArr <<< "$p" isGrayTest=${paramasArr[0]} git=${paramasArr[1]} apollo=${paramasArr[2]} services=${paramasArr[3]} echo "isGrayTest:$isGrayTest git:$git apollo:$apollo services:$services" #git 参数提取 IFS='#' read -r -a gitArr <<< "$git" gitAddr=${gitArr[0]} gitBranch=${gitArr[1]} gitTag=${gitArr[2]} echo "git: addr: $gitAddr branch: $gitBranch tag: $gitTag" #apollo 参数提取 IFS='#' read -r -a apolloArr <<< "$apollo" apolloSecret=${apolloArr[0]} apolloMeta=${apolloArr[1]} apolloEnv=${apolloArr[2]} apolloIdc=${apolloArr[3]} echo "apollo secret:$apolloSecret meta: $apolloMeta env: $apolloEnv Idc: $apolloIdc" projectFloder=`basename $gitAddr .git` echo "projectFloder: $projectFloder" if [ -d "$projectFloder" ] then echo "folder exists" else echo "folder not exist" git clone -b $gitBranch $gitAddr fi cd $projectFloder git checkout $gitBranch git fetch git reset --hard $gitTag /usr/local/apache-maven-3.6.3/bin/mvn -B -DskipTests clean install #service服务参数 IFS='#' read -r -a serviceArr <<< "$services" for svc in "${serviceArr[@]}" do echo "deploy svc: $svc" cd $svc /usr/local/apache-maven-3.6.3/bin/mvn com.syyx.tpf:tpf-build:1.0.0.14.snapshot10:generate /usr/local/apache-maven-3.6.3/bin/mvn com.syyx.tpf:tpf-build:1.0.0.14.snapshot10:deploy -Dapollo.accesskey.secret=$apolloSecret -Dapollo.meta=$apolloMeta -Denv=$apolloEnv -Didc=$apolloIdc cd .. done cd .. done</command>
            <configuredLocalRules/>
        </hudson.tasks.Shell>
    </builders>
    <publishers/>
    <buildWrappers/>
</project>